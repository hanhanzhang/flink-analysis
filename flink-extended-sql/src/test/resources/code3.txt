
public class DynamicDataStreamCalcRule$59 extends org.apache.flink.streaming.api.functions.ProcessFunction {


  final org.apache.flink.types.Row out =
      new org.apache.flink.types.Row(5);

  private org.apache.flink.types.Row in1;


  public DynamicDataStreamCalcRule$59() throws Exception {


  }




  @Override
  public void open(org.apache.flink.configuration.Configuration parameters) throws Exception {


  }

  @Override
  public void processElement(Object _in1, org.apache.flink.streaming.api.functions.ProcessFunction.Context ctx, org.apache.flink.util.Collector c) throws Exception {
    in1 = (org.apache.flink.types.Row) _in1;

    boolean isNull$45 = (java.lang.Long) in1.getField(2) == null;
    long result$44;
    if (isNull$45) {
      result$44 = -1L;
    }
    else {
      result$44 = (java.lang.Long) in1.getField(2);
    }


    boolean isNull$39 = (java.lang.String) in1.getField(0) == null;
    java.lang.String result$38;
    if (isNull$39) {
      result$38 = "";
    }
    else {
      result$38 = (java.lang.String) (java.lang.String) in1.getField(0);
    }


    boolean isNull$52 = (java.lang.String) in1.getField(4) == null;
    java.lang.String result$51;
    if (isNull$52) {
      result$51 = "";
    }
    else {
      result$51 = (java.lang.String) (java.lang.String) in1.getField(4);
    }


    boolean isNull$42 = (java.lang.Integer) in1.getField(1) == null;
    int result$41;
    if (isNull$42) {
      result$41 = -1;
    }
    else {
      result$41 = (java.lang.Integer) in1.getField(1);
    }


    boolean isNull$47 = (java.lang.String) in1.getField(3) == null;
    java.lang.String result$46;
    if (isNull$47) {
      result$46 = "";
    }
    else {
      result$46 = (java.lang.String) (java.lang.String) in1.getField(3);
    }









    java.lang.String result$48 = "\u5973";

    boolean isNull$50 = isNull$47 || false;
    boolean result$49;
    if (isNull$50) {
      result$49 = false;
    }
    else {
      result$49 = result$46.compareTo(result$48) == 0;
    }


    boolean result$56 = false;
    boolean isNull$57 = false;
    if (!isNull$50 && !result$49) {
      // left expr is false, result is always false
      // skip right expr
    } else {



    java.lang.String result$53 = "\u652F\u4ED8";

    boolean isNull$55 = isNull$52 || false;
    boolean result$54;
    if (isNull$55) {
      result$54 = false;
    }
    else {
      result$54 = result$51.compareTo(result$53) == 0;
    }


      if (isNull$50) {
        // left is null (unknown)
        if (isNull$55 || result$54) {
          isNull$57 = true;
        }
      } else {
        // left is true
        if (isNull$55) {
          isNull$57 = true;
        } else if (result$54) {
          result$56 = true;
        }
      }
    }

    if (result$56) {


    if (isNull$39) {
      out.setField(0, null);
    }
    else {
      out.setField(0, result$38);
    }



    java.lang.String result$40 = "\u5973";

    if (false) {
      out.setField(1, null);
    }
    else {
      out.setField(1, result$40);
    }



    if (isNull$42) {
      out.setField(2, null);
    }
    else {
      out.setField(2, result$41);
    }



    java.lang.String result$43 = "\u652F\u4ED8";

    if (false) {
      out.setField(3, null);
    }
    else {
      out.setField(3, result$43);
    }



    if (isNull$45) {
      out.setField(4, null);
    }
    else {
      out.setField(4, result$44);
    }

      c.collect(out);
    }

  }

  @Override
  public void close() throws Exception {


  }
}
